<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.microtema</groupId>
    <artifactId>stream-listener-starter</artifactId>
    <version>3.0.2</version>
    <packaging>jar</packaging>

    <name>Stream Listener Spring Boot Stater Library</name>
    <description>Stream Listener Spring Boot Stater Library</description>
    <url>https://github.com/microtema/stream-listener-starter.git</url>

    <properties>
        <java.version>17</java.version>
        <maven.compiler.source.version>17</maven.compiler.source.version>
        <maven.compiler.target.version>17</maven.compiler.target.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <springframework.version>3.0.0</springframework.version>

        <commons.lang3.version>3.4</commons.lang3.version>
        <validation.api.version>2.0.1.Final</validation.api.version>
        <model-builder.version>2.5.3</model-builder.version>
        <model-converter.version>2.0.6</model-converter.version>

        <maven.compiler.plugin>2.3.2</maven.compiler.plugin>
        <maven.source.plugin>2.2.1</maven.source.plugin>
        <maven.javadoc.plugin>2.10.4</maven.javadoc.plugin>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${springframework.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
        </dependency>

        <dependency>
            <groupId>de.microtema</groupId>
            <artifactId>model-converter</artifactId>
            <version>${model-converter.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.projectlombok</groupId>
                    <artifactId>lombok</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${springframework.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>de.microtema</groupId>
            <artifactId>model-builder</artifactId>
            <version>2.5.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
            <version>2.0.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.10.1</version>
                    <configuration>
                        <compilerArgs>
                            <arg>-parameters</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.plugin}</version>
                <configuration>
                    <detectJavaApiLink>false</detectJavaApiLink>
                    <additionalparam>-Xdoclint:none</additionalparam>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>

        <profile>
            <id>dev</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>de.microtema</groupId>
                        <artifactId>github-workflows-maven-plugin</artifactId>
                        <version>2.0.4</version>
                        <configuration>
                            <runsOn></runsOn>
                            <variables>
                            </variables>
                            <stages>
                                <none>feature/**</none>
                                <dev>develop</dev>
                                <int>release/**</int>
                                <prod>master</prod>
                            </stages>
                        </configuration>
                        <executions>
                            <execution>
                                <id>github-workflows</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <!-- Nexus Staging Plugin for Deploying to central repository -->
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.13</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                    <!-- Maven PGP Plugin for generating a pgp signature of the project.
                            This is required by the maven central repository. -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <configuration>
                            <executable>gpg</executable>
                        </configuration>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>

            <distributionManagement>
                <snapshotRepository>
                    <id>ossrh</id>
                    <url>https://oss.sonatype.org/content/repositories/snapshots</url>
                </snapshotRepository>
                <repository>
                    <id>ossrh</id>
                    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
            </distributionManagement>

        </profile>
    </profiles>

    <licenses>
        <license>
            <name>The MIT License (MIT)</name>
            <url>https://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <organization>
        <name>Mario Tema</name>
        <url>http://microtema.de</url>
    </organization>

    <scm>
        <url>https://github.com/microtema/stream-listener-starter</url>
        <connection>scm:git:git@github.com:microtema/stream-listener-starter.git</connection>
        <developerConnection>scm:git:git@github.com:microtema/stream-listener-starter.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <developers>
        <developer>
            <id>mtema</id>
            <name>Mario Tema</name>
            <email>7fate@web.com</email>
            <organization>Mario Tema</organization>
            <organizationUrl>http://microtema.de</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>Europe/Berlin</timezone>
            <properties>
                <picUrl>https://de.gravatar.com/userimage/70924930/12d1387ebc85adc526dc0ab008cf9dda.jpeg</picUrl>
            </properties>
        </developer>
    </developers>

</project>
